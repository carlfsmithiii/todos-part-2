{"version":3,"sources":["components/header.js","components/todo_item.js","components/todo_list.js","components/footer.js","components/app.js","index.js"],"names":["Header","state","new_todo","onFormChange","event","newValue","target","value","_this","setState","onFormSubmit","preventDefault","length","props","addTodo","react_default","a","createElement","className","onSubmit","this","placeholder","onChange","name","autoFocus","Component","TodoItem","_ref","id","completed","title","completeTodo","removeTodo","type","checked","onClick","TodoList","todos","map","todo","key","handleCompleteTodoClick","handleRemoveTodoClick","Footer","todo_count","completed_count","clearCompleted","App","Todos","reduce","accumulator","handleAddTodo","newTodoText","newTodoId","Object","values","newTodo","userId","prevState","assign","defineProperty","todoId","objectSpread","handleClearCompletedTodos","getCompletedTodosCount","header_Header","keys","ReactDOM","render","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.a5c8e792.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Header extends Component {\n  state = { new_todo: \"\" };\n\n  onFormChange = event => {\n    const newValue = event.target.value;\n\n    this.setState(() => {\n      return { new_todo: newValue };\n    });\n  };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.new_todo.length > 0) {\n      this.props.addTodo(this.state.new_todo);\n\n      this.setState(() => {\n        return { new_todo: \"\" };\n      });\n    }\n  };\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.onFormSubmit}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"what do you need to do?\"\n            onChange={this.onFormChange}\n            name=\"new-todo\"\n            autoFocus\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function TodoItem({\n  id,\n  completed,\n  title,\n  completeTodo,\n  removeTodo\n}) {\n  return (\n    <li className={completed ? \"completed\" : \"\"}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => completeTodo(id)}\n        />\n        <label>{title}</label>\n        <button className=\"destroy\" onClick={() => removeTodo(id)} />\n      </div>\n    </li>\n  );\n}\n","import React from 'react'\nimport TodoItem from './todo_item';\n\nexport default function TodoList(props) {\n  return (\n    <ul className=\"todo-list\">\n      {props.todos && props.todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          title={todo.title}\n          completed={todo.completed}\n          id={todo.id}\n          completeTodo={props.handleCompleteTodoClick}\n          removeTodo={props.handleRemoveTodoClick}\n        />\n      ))}\n    </ul>\n  )\n}\n","import React from \"react\";\n\nexport default function Footer(props) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{props.todo_count}</strong> item(s) left\n      </span>\n      {props.completed_count > 0 && <button className=\"clear-completed\" onClick={props.clearCompleted}>Clear completed</button>}\n    </footer>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport Header from \"./header\";\nimport TodoList from \"./todo_list\";\nimport Footer from \"./footer\";\n\nimport Todos from \"../todos.json\";\n\nexport default class App extends Component {\n  state = {\n    todos: Todos.reduce((accumulator, todo) => {\n      accumulator[todo.id] = todo;\n      return accumulator;\n    }, {})\n  };\n\n  handleAddTodo = newTodoText => {\n    const newTodoId =\n      Object.values(this.state.todos).reduce((accumulator, todo) =>\n        accumulator.id > todo.id ? accumulator : todo\n      ).id + 1;\n\n    const newTodo = {\n      userId: 1,\n      id: newTodoId,\n      title: newTodoText,\n      completed: false\n    };\n\n    this.setState(prevState => {\n      return {\n        todos: Object.assign(prevState.todos, { [newTodoId]: newTodo })\n      };\n    });\n  };\n\n  handleCompleteTodoClick = todoId => {\n    this.setState(prevState => {\n      const todos = { ...prevState.todos };\n      todos[todoId].completed = !todos[todoId].completed;\n\n      return { todos };\n    });\n  };\n\n  handleRemoveTodoClick = todoId => {\n    this.setState(prevState => {\n      const todos = { ...prevState.todos };\n      delete todos[todoId];\n\n      return { todos };\n    });\n  };\n\n  handleClearCompletedTodos = () => {\n    this.setState(prevState => {\n      const todos = Object.values(prevState.todos).reduce((accumulator, todo) => {\n        if (!todo.completed) {\n          accumulator[todo.id] = todo;\n        }\n        return accumulator;\n      }, {});\n\n      return { todos };\n\n    });\n  };\n\n  getCompletedTodosCount = () => {\n    return Object.values(this.state.todos).reduce(\n      (accumulator, todo) => (todo.completed ? ++accumulator : accumulator),\n      0\n    );\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.handleAddTodo} />\n        <TodoList\n          todos={Object.values(this.state.todos)}\n          handleCompleteTodoClick={this.handleCompleteTodoClick}\n          handleRemoveTodoClick={this.handleRemoveTodoClick}\n        />\n        <Footer\n          todo_count={Object.keys(this.state.todos).length}\n          completed_count={this.getCompletedTodosCount()}\n          clearCompleted={this.handleClearCompletedTodos}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}